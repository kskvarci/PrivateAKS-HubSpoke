{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "extensions_setupdnsfirewall_fileUris": {
            "type": "Array"
        },
        "extensions_setupdnsfirewall_storageAccountName": {
            "type": "SecureString"
        },
        "extensions_setupdnsfirewall_storageAccountKey": {
            "type": "SecureString"
        },
        "extensions_setupdnsfirewall_commandToExecute": {
            "type": "SecureString"
        },
        "virtualMachines_Jumpbox_name": {
            "defaultValue": "Jumpbox",
            "type": "String"
        },
        "networkInterfaces_vmnic_name": {
            "defaultValue": "vmnic",
            "type": "String"
        },
        "virtualNetworks_HubVnet_name": {
            "defaultValue": "HubVnet",
            "type": "String"
        },
        "routeTables_workload_udr_name": {
            "defaultValue": "workload-udr",
            "type": "String"
        },
        "virtualNetworks_SpokeVnet_name": {
            "defaultValue": "SpokeVnet",
            "type": "String"
        },
        "virtualMachines_dnsforwarder_name": {
            "defaultValue": "dnsforwarder",
            "type": "String"
        },
        "managedClusters_aks_name": {
            "defaultValue": "aks",
            "type": "String"
        },
        "azureFirewalls_SharedFirewall_name": {
            "defaultValue": "SharedFirewall",
            "type": "String"
        },
        "networkInterfaces_JumpboxVMNic_name": {
            "defaultValue": "JumpboxVMNic",
            "type": "String"
        },
        "networkSecurityGroups_proxy_nsg_name": {
            "defaultValue": "proxy-nsg",
            "type": "String"
        },
        "networkSecurityGroups_jumpbox_nsg_name": {
            "defaultValue": "jumpbox-nsg",
            "type": "String"
        },
        "publicIPAddresses_JumpboxPublicIP_name": {
            "defaultValue": "JumpboxPublicIP",
            "type": "String"
        },
        "networkSecurityGroups_workload_nsg_name": {
            "defaultValue": "workload-nsg",
            "type": "String"
        },
        "availabilitySets_dnsforwarder_avail_name": {
            "defaultValue": "dnsforwarder-avail",
            "type": "String"
        },
        "publicIPAddresses_SharedFirewall_pip_name": {
            "defaultValue": "SharedFirewall-pip",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[parameters('networkSecurityGroups_jumpbox_nsg_name')]",
            "location": "eastus2",
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh-inbound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "65.190.18.112/32",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[parameters('networkSecurityGroups_proxy_nsg_name')]",
            "location": "eastus2",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[parameters('networkSecurityGroups_workload_nsg_name')]",
            "location": "eastus2",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-Ingress",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "10.0.0.0/8",
                            "destinationAddressPrefix": "10.1.0.200",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAll80",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "10.0.0.0/8",
                            "destinationAddressPrefix": "10.1.0.0/16",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInterVnet80",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "10.1.0.0/16",
                            "destinationAddressPrefix": "10.1.0.0/16",
                            "access": "Allow",
                            "priority": 999,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "name": "[parameters('publicIPAddresses_JumpboxPublicIP_name')]",
            "location": "eastus2",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "ipAddress": "52.177.71.162",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "name": "[parameters('publicIPAddresses_SharedFirewall_pip_name')]",
            "location": "eastus2",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "ipAddress": "52.167.248.84",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2019-11-01",
            "name": "[parameters('routeTables_workload_udr_name')]",
            "location": "eastus2",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "DG-Route",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.0.0.4"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2019-07-01",
            "name": "[parameters('availabilitySets_dnsforwarder_avail_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_dnsforwarder_name'))]"
            ],
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformUpdateDomainCount": 2,
                "platformFaultDomainCount": 2,
                "virtualMachines": [
                    {
                        "id": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_dnsforwarder_name'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[parameters('virtualMachines_Jumpbox_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_JumpboxVMNic_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_DS2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_Jumpbox_name'), '_OsDisk_1_b3f9884cf9e5433a8c486c437d8b447b')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_Jumpbox_name'), '_OsDisk_1_b3f9884cf9e5433a8c486c437d8b447b'))]"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_Jumpbox_name')]",
                    "adminUsername": "ken",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/ken/.ssh/authorized_keys",
                                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDNHFZf81KtnMfwdFV2Y+cci7XrvUQ9aYRssOvJfrwO5FypWBmURsW1eJ1HeW2ngQmsFXN6vVIqXh8EJtbIfW5nhNh94UAlGl1ANEnyvN3KbVxqZG7Dxbx4PWolsI+y7zEItxRkrFIfUVk3MJaa/tiTnMQaQcRANg2d6WlRIcpn/tfzancy1WJDvCEFjQehs9VPIh3U/FQtTuO/l63roOjEQwfQOo7EAyKfQf01n5GJbQ4AsqN0Sm+e/9gNdSQ5vmoDl3ICL+x0sKPmEi64DPWXj1R+5Ys8enbOmCWBITNI8MVkD7FP7EUhtLCPAwUWSLMFbnGrwQTatxqZFwYWgcNp ken@DESKTOP-40J8SQI"
                                }
                            ]
                        },
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_JumpboxVMNic_name'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-07-01",
            "name": "[concat(parameters('virtualMachines_dnsforwarder_name'), '/setupdnsfirewall')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_dnsforwarder_name'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "settings": {
                    "fileUris": "[parameters('extensions_setupdnsfirewall_fileUris')]"
                },
                "protectedSettings": {
                    "storageAccountName": "[parameters('extensions_setupdnsfirewall_storageAccountName')]",
                    "storageAccountKey": "[parameters('extensions_setupdnsfirewall_storageAccountKey')]",
                    "commandToExecute": "[parameters('extensions_setupdnsfirewall_commandToExecute')]"
                }
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2020-01-01",
            "name": "[parameters('managedClusters_aks_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_SpokeVnet_name'), 'workload-subnet')]"
            ],
            "properties": {
                "kubernetesVersion": "1.14.8",
                "dnsPrefix": "ksk",
                "agentPoolProfiles": [
                    {
                        "name": "testnp",
                        "count": 3,
                        "vmSize": "Standard_D2_v2",
                        "osDiskSizeGB": 100,
                        "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_SpokeVnet_name'), 'workload-subnet')]",
                        "maxPods": 30,
                        "type": "VirtualMachineScaleSets",
                        "orchestratorVersion": "1.14.8",
                        "osType": "Linux"
                    }
                ],
                "servicePrincipalProfile": {
                    "clientId": "17256721-4715-495a-b321-8b12669526a5"
                },
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": false
                    }
                },
                "nodeResourceGroup": "[concat('MC_', parameters('managedClusters_aks_name'), '_eastus2')]",
                "enableRBAC": true,
                "networkProfile": {
                    "networkPlugin": "azure",
                    "networkPolicy": "calico",
                    "loadBalancerSku": "Standard",
                    "serviceCidr": "172.20.0.0/16",
                    "dnsServiceIP": "172.20.0.10",
                    "dockerBridgeCidr": "172.17.0.1/16",
                    "outboundType": "userDefinedRouting"
                },
                "apiServerAccessProfile": {
                    "enablePrivateCluster": true
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "name": "[parameters('networkInterfaces_vmnic_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HubVnet_name'), 'dns-subnet')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.0.3.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HubVnet_name'), 'dns-subnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-11-01",
            "name": "[concat(parameters('networkSecurityGroups_workload_nsg_name'), '/Allow-Ingress')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_workload_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "10.0.0.0/8",
                "destinationAddressPrefix": "10.1.0.200",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-11-01",
            "name": "[concat(parameters('networkSecurityGroups_workload_nsg_name'), '/AllowInterVnet80')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_workload_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "10.1.0.0/16",
                "destinationAddressPrefix": "10.1.0.0/16",
                "access": "Allow",
                "priority": 999,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-11-01",
            "name": "[concat(parameters('networkSecurityGroups_workload_nsg_name'), '/DenyAll80')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_workload_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "10.0.0.0/8",
                "destinationAddressPrefix": "10.1.0.0/16",
                "access": "Deny",
                "priority": 1000,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-11-01",
            "name": "[concat(parameters('networkSecurityGroups_jumpbox_nsg_name'), '/ssh-inbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_jumpbox_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "65.190.18.112/32",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2019-11-01",
            "name": "[concat(parameters('routeTables_workload_udr_name'), '/DG-Route')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_workload_udr_name'))]"
            ],
            "properties": {
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "10.0.0.4"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-11-01",
            "name": "[concat(parameters('virtualNetworks_SpokeVnet_name'), '/appgw-subnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_SpokeVnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.1.1.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-11-01",
            "name": "[concat(parameters('virtualNetworks_HubVnet_name'), '/AzureFirewallSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-11-01",
            "name": "[concat(parameters('virtualNetworks_HubVnet_name'), '/dns-subnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.3.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[parameters('virtualMachines_dnsforwarder_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_dnsforwarder_avail_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vmnic_name'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_dnsforwarder_avail_name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_A1"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "RedHat",
                        "offer": "RHEL",
                        "sku": "7.2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_dnsforwarder_name'), '_OsDisk_1_3ec70957a2bf49faba19584936b971a1')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_dnsforwarder_name'), '_OsDisk_1_3ec70957a2bf49faba19584936b971a1'))]"
                        },
                        "diskSizeGB": 32
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_dnsforwarder_name')]",
                    "adminUsername": "ken",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/ken/.ssh/authorized_keys",
                                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDNHFZf81KtnMfwdFV2Y+cci7XrvUQ9aYRssOvJfrwO5FypWBmURsW1eJ1HeW2ngQmsFXN6vVIqXh8EJtbIfW5nhNh94UAlGl1ANEnyvN3KbVxqZG7Dxbx4PWolsI+y7zEItxRkrFIfUVk3MJaa/tiTnMQaQcRANg2d6WlRIcpn/tfzancy1WJDvCEFjQehs9VPIh3U/FQtTuO/l63roOjEQwfQOo7EAyKfQf01n5GJbQ4AsqN0Sm+e/9gNdSQ5vmoDl3ICL+x0sKPmEi64DPWXj1R+5Ys8enbOmCWBITNI8MVkD7FP7EUhtLCPAwUWSLMFbnGrwQTatxqZFwYWgcNp ken@DESKTOP-40J8SQI"
                                }
                            ]
                        }
                    },
                    "secrets": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vmnic_name'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters/agentPools",
            "apiVersion": "2020-01-01",
            "name": "[concat(parameters('managedClusters_aks_name'), '/testnp')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedClusters_aks_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_SpokeVnet_name'), 'workload-subnet')]"
            ],
            "properties": {
                "count": 3,
                "vmSize": "Standard_D2_v2",
                "osDiskSizeGB": 100,
                "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_SpokeVnet_name'), 'workload-subnet')]",
                "maxPods": 30,
                "type": "VirtualMachineScaleSets",
                "orchestratorVersion": "1.14.8",
                "osType": "Linux"
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2019-11-01",
            "name": "[parameters('azureFirewalls_SharedFirewall_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_SharedFirewall_pip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HubVnet_name'), 'AzureFirewallSubnet')]"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "additionalProperties": {},
                "ipConfigurations": [
                    {
                        "name": "FW-config",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_SharedFirewall_pip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HubVnet_name'), 'AzureFirewallSubnet')]"
                            }
                        }
                    }
                ],
                "networkRuleCollections": [
                    {
                        "name": "AKS-NetCol",
                        "properties": {
                            "priority": 202,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "Allow-UbuntuNTP",
                                    "protocols": [
                                        "UDP"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "destinationAddresses": [
                                        "91.189.89.198",
                                        "91.189.89.199",
                                        "91.189.94.4",
                                        "91.189.91.157"
                                    ],
                                    "sourceIpGroups": [],
                                    "destinationIpGroups": [],
                                    "destinationFqdns": [],
                                    "destinationPorts": [
                                        "123"
                                    ]
                                },
                                {
                                    "name": "Allow-MasterConn",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "destinationAddresses": [
                                        "*"
                                    ],
                                    "sourceIpGroups": [],
                                    "destinationIpGroups": [],
                                    "destinationFqdns": [],
                                    "destinationPorts": [
                                        "22",
                                        "9000"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "applicationRuleCollections": [
                    {
                        "name": "AKS-ReqCol",
                        "properties": {
                            "priority": 200,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "Allow-API1",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "*.hcp.eastus2.azmk8s.io"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-API2",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "*.tun.eastus2.azmk8s.io"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-ACR",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "aksrepos.azurecr.io"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-ImageBlob",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "*.blob.core.windows.net"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-MCR",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "mcr.microsoft.com"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-MCRStorage",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "*.cdn.mscr.io"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-KubeGetPut",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "management.azure.com"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-AAD",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "login.microsoftonline.com"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-ACS",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "acs-mirror.azureedge.net"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                }
                            ]
                        }
                    },
                    {
                        "name": "AKS-OptCol",
                        "properties": {
                            "priority": 201,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "Allow-NodeUpdates",
                                    "protocols": [
                                        {
                                            "protocolType": "Http",
                                            "port": 80
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "security.ubuntu.com",
                                        "azure.archive.ubuntu.com",
                                        "changelogs.ubuntu.com"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-MSAPT",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "packages.microsoft.com"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-MonitorMetricsVS",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "dc.services.visualstudio.com"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-MonitorMetricsInsights",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "*.opinsights.azure.com"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-MonitorMetricsInsights2",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "scus-agentservice-prod-1.azure-automation.net"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-MonitorMetricsMonitoring",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "*.monitoring.azure.com"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-AzurePol",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "gov-prod-policy-data.trafficmanager.net"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-GPUAPT",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "apt.dockerproject.org"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-GPUNVid",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "nvidia.github.io"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-Dockercloudflare",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "production.cloudflare.docker.com"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-DockerIO",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "*.docker.io"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-GCRIO",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "gcr.io"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-GoogleStorage",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "storage.googleapis.com"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-k8s",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "k8s.gcr.io"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-quay",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "quay.io"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                },
                                {
                                    "name": "Allow-cloudfront",
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [],
                                    "targetFqdns": [
                                        "*.cloudfront.net"
                                    ],
                                    "sourceAddresses": [
                                        "10.1.0.0/24"
                                    ],
                                    "sourceIpGroups": []
                                }
                            ]
                        }
                    }
                ],
                "natRuleCollections": []
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "name": "[parameters('networkInterfaces_JumpboxVMNic_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_JumpboxPublicIP_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HubVnet_name'), 'jumpbox-subnet')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigJumpbox",
                        "properties": {
                            "privateIPAddress": "10.0.2.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_JumpboxPublicIP_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_HubVnet_name'), 'jumpbox-subnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-11-01",
            "name": "[concat(parameters('virtualNetworks_HubVnet_name'), '/jumpbox-subnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVnet_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_jumpbox_nsg_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.2.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_jumpbox_nsg_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-11-01",
            "name": "[concat(parameters('virtualNetworks_HubVnet_name'), '/proxy-subnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVnet_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_proxy_nsg_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.1.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_proxy_nsg_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-11-01",
            "name": "[concat(parameters('virtualNetworks_HubVnet_name'), '/hubtospoke')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVnet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_SpokeVnet_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_SpokeVnet_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-11-01",
            "name": "[concat(parameters('virtualNetworks_SpokeVnet_name'), '/spoketohub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_SpokeVnet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVnet_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVnet_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "name": "[parameters('virtualNetworks_HubVnet_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_proxy_nsg_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_jumpbox_nsg_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_SpokeVnet_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": []
                },
                "subnets": [
                    {
                        "name": "AzureFirewallSubnet",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "proxy-subnet",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_proxy_nsg_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "jumpbox-subnet",
                        "properties": {
                            "addressPrefix": "10.0.2.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_jumpbox_nsg_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "dns-subnet",
                        "properties": {
                            "addressPrefix": "10.0.3.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "hubtospoke",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_SpokeVnet_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.1.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "name": "[parameters('virtualNetworks_SpokeVnet_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_workload_nsg_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_workload_udr_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVnet_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": [
                        "10.0.3.4"
                    ]
                },
                "subnets": [
                    {
                        "name": "appgw-subnet",
                        "properties": {
                            "addressPrefix": "10.1.1.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "workload-subnet",
                        "properties": {
                            "addressPrefix": "10.1.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_workload_nsg_name'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_workload_udr_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "spoketohub",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_HubVnet_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.0.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-11-01",
            "name": "[concat(parameters('virtualNetworks_SpokeVnet_name'), '/workload-subnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_SpokeVnet_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_workload_nsg_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_workload_udr_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.1.0.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_workload_nsg_name'))]"
                },
                "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_workload_udr_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        }
    ]
}